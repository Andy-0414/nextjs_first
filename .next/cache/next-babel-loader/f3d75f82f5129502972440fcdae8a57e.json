{"ast":null,"code":"var _dec,\n    _class,\n    _jsxFileName = \"D:\\\\develop\\\\nextjs_first\\\\components\\\\TodoItem.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport \"./TodoItem.scss\";\nimport { observer, inject } from \"mobx-react\";\nlet TodoItem = (_dec = inject(\"store\"), _dec(_class = observer(_class = class TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleRemoveThis = this.handleRemoveThis.bind(this);\n    this.handleTodoFinish = this.handleTodoFinish.bind(this);\n  }\n\n  render() {\n    const {\n      item\n    } = this.props;\n    return __jsx(\"li\", {\n      className: \"todolist__item \" + (item.isFinished ? \"finish\" : \"\"),\n      onClick: this.handleTodoFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }, item.name), __jsx(\"button\", {\n      onClick: this.handleRemoveThis,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, \"X\"));\n  } // TodoItem 삭제\n\n\n  handleRemoveThis() {\n    let {\n      item,\n      store\n    } = this.props; // store 사용\n\n    store.removeTodo(item);\n  } // TodoItem 완료 처리\n\n\n  handleTodoFinish() {\n    let {\n      item,\n      store\n    } = this.props;\n    item.isFinished = !item.isFinished; // store 사용\n\n    store.updateTodo(item);\n  }\n\n}) || _class) || _class);\nexport default TodoItem;","map":{"version":3,"sources":["D:/develop/nextjs_first/components/TodoItem.tsx"],"names":["React","observer","inject","TodoItem","Component","constructor","props","handleRemoveThis","bind","handleTodoFinish","render","item","isFinished","name","store","removeTodo","updateTodo"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AAEA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;IAUMC,Q,WAFLD,MAAM,CAAC,OAAD,C,gBACND,Q,UADD,MAEME,QAFN,SAEuBH,KAAK,CAACI,SAF7B,CAE8C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA;;AACDE,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKL,KAAtB;AACA,WACC;AAAI,MAAA,SAAS,EAAE,qBAAqBK,IAAI,CAACC,UAAL,GAAkB,QAAlB,GAA6B,EAAlD,CAAf;AAAsE,MAAA,OAAO,EAAE,KAAKH,gBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,IAAI,CAACE,IAAT,CADD,EAEC;AAAQ,MAAA,OAAO,EAAE,KAAKN,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFD,CADD;AAMA,GAd4C,CAgB7C;;;AACAA,EAAAA,gBAAgB,GAAG;AAClB,QAAI;AAAEI,MAAAA,IAAF;AAAQG,MAAAA;AAAR,QAAkB,KAAKR,KAA3B,CADkB,CAGlB;;AACAQ,IAAAA,KAAK,CAACC,UAAN,CAAiBJ,IAAjB;AACA,GAtB4C,CAuB7C;;;AACAF,EAAAA,gBAAgB,GAAG;AAClB,QAAI;AAAEE,MAAAA,IAAF;AAAQG,MAAAA;AAAR,QAAkB,KAAKR,KAA3B;AACAK,IAAAA,IAAI,CAACC,UAAL,GAAkB,CAACD,IAAI,CAACC,UAAxB,CAFkB,CAIlB;;AACAE,IAAAA,KAAK,CAACE,UAAN,CAAiBL,IAAjB;AACA;;AA9B4C,C;AAiC9C,eAAeR,QAAf","sourcesContent":["import React from \"react\";\r\nimport \"./TodoItem.scss\";\r\nimport { ITodoItem } from \"./TodoList\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { Store } from \"../store\";\r\n\r\ninterface Props {\r\n\tstore?: Store;\r\n\titem: ITodoItem;\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass TodoItem extends React.Component<Props> {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleRemoveThis = this.handleRemoveThis.bind(this);\r\n\t\tthis.handleTodoFinish = this.handleTodoFinish.bind(this);\r\n\t}\r\n\trender() {\r\n\t\tconst { item } = this.props;\r\n\t\treturn (\r\n\t\t\t<li className={\"todolist__item \" + (item.isFinished ? \"finish\" : \"\")} onClick={this.handleTodoFinish}>\r\n\t\t\t\t<p>{item.name}</p>\r\n\t\t\t\t<button onClick={this.handleRemoveThis}>X</button>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n\r\n\t// TodoItem 삭제\r\n\thandleRemoveThis() {\r\n\t\tlet { item, store } = this.props;\r\n\r\n\t\t// store 사용\r\n\t\tstore.removeTodo(item);\r\n\t}\r\n\t// TodoItem 완료 처리\r\n\thandleTodoFinish() {\r\n\t\tlet { item, store } = this.props;\r\n\t\titem.isFinished = !item.isFinished;\r\n\r\n\t\t// store 사용\r\n\t\tstore.updateTodo(item);\r\n\t}\r\n}\r\n\r\nexport default TodoItem;\r\n"]},"metadata":{},"sourceType":"module"}