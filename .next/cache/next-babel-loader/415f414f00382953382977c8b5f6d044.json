{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\pjh86\\\\Desktop\\\\Project\\\\nextjs_first\\\\pages\\\\index.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport TodoList from \"../components/TodoList\";\nimport \"./index.scss\";\nimport { inject, observer } from \"mobx-react\";\nvar Index = (_dec = inject(\"store\"), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  var _super = _createSuper(Index);\n\n  // 생성자\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n    _this.inputEl = void 0;\n    _this.handleAppendTodo = _this.handleAppendTodo.bind(_assertThisInitialized(_this));\n    return _this;\n  } // 랜더링\n\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function () {\n      var _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = console;\n                _context.next = 3;\n                return this.props.store.testAxios();\n\n              case 3:\n                _context.t1 = _context.sent;\n\n                _context.t0.log.call(_context.t0, _context.t1);\n\n                return _context.abrupt(\"return\", __jsx(\"div\", {\n                  id: \"app\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 25,\n                    columnNumber: 4\n                  }\n                }, __jsx(\"div\", {\n                  className: \"todo\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 26,\n                    columnNumber: 5\n                  }\n                }, __jsx(\"input\", {\n                  type: \"text\",\n                  className: \"todo__input\",\n                  onKeyPress: this.handleAppendTodo,\n                  ref: function ref(el) {\n                    return _this2.inputEl = el;\n                  },\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 27,\n                    columnNumber: 6\n                  }\n                }), __jsx(TodoList, {\n                  list: this.props.store.todolist,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 28,\n                    columnNumber: 6\n                  }\n                }))));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function render() {\n        return _render.apply(this, arguments);\n      }\n\n      return render;\n    }() // 엔터 쳤을 시 Todo 추가\n\n  }, {\n    key: \"handleAppendTodo\",\n    value: function handleAppendTodo(e) {\n      if (e.key == \"Enter\") {\n        var _ref = e.target,\n            value = _ref.value; // store 사용\n\n        this.props.store.addTodo({\n          name: value,\n          isFinished: false\n        }); // value 비움\n\n        this.inputEl.value = \"\";\n      }\n    }\n  }]);\n\n  return Index;\n}(React.Component), _temp)) || _class) || _class);\nexport default Index;","map":{"version":3,"sources":["C:/Users/pjh86/Desktop/Project/nextjs_first/pages/index.tsx"],"names":["React","TodoList","inject","observer","Index","props","inputEl","handleAppendTodo","bind","console","store","testAxios","log","el","todolist","e","key","target","value","addTodo","name","isFinished","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAoC,wBAApC;AAEA,OAAO,cAAP;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;IASMC,K,WAFLF,MAAM,CAAC,OAAD,C,gBACNC,Q;;;;;AAGA;AACA,iBAAYE,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AADkB,UAFnBC,OAEmB;AAElB,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB;AAFkB;AAGlB,G,CACD;;;;;;;;;;;;;8BAECC,O;;uBAAkB,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,SAAjB,E;;;;;4BAAVC,G;;iDAEP;AAAK,kBAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACC;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACC;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,SAAS,EAAC,aAA7B;AAA2C,kBAAA,UAAU,EAAE,KAAKL,gBAA5D;AAA8E,kBAAA,GAAG,EAAE,aAACM,EAAD;AAAA,2BAAS,MAAI,CAACP,OAAL,GAAeO,EAAxB;AAAA,mBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,EAEC,MAAC,QAAD;AAAU,kBAAA,IAAI,EAAE,KAAKR,KAAL,CAAWK,KAAX,CAAiBI,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,CADD,C;;;;;;;;;;;;;;;QAQF;;;;qCACiBC,C,EAAwB;AACxC,UAAIA,CAAC,CAACC,GAAF,IAAS,OAAb,EAAsB;AAAA,mBACHD,CAAC,CAACE,MADC;AAAA,YACbC,KADa,QACbA,KADa,EAErB;;AACA,aAAKb,KAAL,CAAWK,KAAX,CAAiBS,OAAjB,CAAyB;AACxBC,UAAAA,IAAI,EAAEF,KADkB;AAExBG,UAAAA,UAAU,EAAE;AAFY,SAAzB,EAHqB,CAOrB;;AACA,aAAKf,OAAL,CAAaY,KAAb,GAAqB,EAArB;AACA;AACD;;;;EA/BkBlB,KAAK,CAACsB,S;AAkC1B,eAAelB,KAAf","sourcesContent":["import React from \"react\";\r\nimport TodoList, { ITodoItem } from \"../components/TodoList\";\r\nimport Link from \"next/link\";\r\nimport \"./index.scss\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Store } from \"../store\";\r\n\r\ninterface Props {\r\n\tstore: Store;\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Index extends React.Component<Props> {\r\n\tinputEl: HTMLInputElement;\r\n\t// 생성자\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleAppendTodo = this.handleAppendTodo.bind(this);\r\n\t}\r\n\t// 랜더링\r\n\tasync render() {\r\n\t\tconsole.log(await this.props.store.testAxios());\r\n\t\treturn (\r\n\t\t\t<div id=\"app\">\r\n\t\t\t\t<div className=\"todo\">\r\n\t\t\t\t\t<input type=\"text\" className=\"todo__input\" onKeyPress={this.handleAppendTodo} ref={(el) => (this.inputEl = el)} />\r\n\t\t\t\t\t<TodoList list={this.props.store.todolist}></TodoList>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t// 엔터 쳤을 시 Todo 추가\r\n\thandleAppendTodo(e: React.KeyboardEvent) {\r\n\t\tif (e.key == \"Enter\") {\r\n\t\t\tconst { value } = e.target as HTMLInputElement;\r\n\t\t\t// store 사용\r\n\t\t\tthis.props.store.addTodo({\r\n\t\t\t\tname: value,\r\n\t\t\t\tisFinished: false,\r\n\t\t\t});\r\n\t\t\t// value 비움\r\n\t\t\tthis.inputEl.value = \"\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}