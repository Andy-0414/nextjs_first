{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class,\n    _descriptor,\n    _temp,\n    _s = $RefreshSig$();\n\nimport { action, observable } from \"mobx\";\nimport { useStaticRendering } from \"mobx-react\";\nimport { useMemo } from \"react\";\nimport Axios from \"axios\";\nuseStaticRendering(false);\nvar store;\nexport var Store = (_class = (_temp = /*#__PURE__*/function () {\n  function Store() {\n    _classCallCheck(this, Store);\n\n    _initializerDefineProperty(this, \"todolist\", _descriptor, this);\n  }\n\n  _createClass(Store, [{\n    key: \"addTodo\",\n    // TodoItem 추가\n    value: function addTodo(item) {\n      if (this.todolist.length == 0) item.id = 0;else item.id = this.todolist[this.todolist.length - 1].id + 1;\n      this.todolist.push(item);\n    } // TodoItem 삭제\n\n  }, {\n    key: \"removeTodo\",\n    value: function removeTodo(item) {\n      var idx = this.todolist.findIndex(function (i) {\n        return i.id == item.id;\n      });\n      if (idx != -1) this.todolist.splice(idx, 1);\n    } // TodoItem 갱신\n\n  }, {\n    key: \"updateTodo\",\n    value: function updateTodo(item) {\n      var idx = this.todolist.findIndex(function (i) {\n        return i.id == item.id;\n      });\n      if (idx != -1) this.todolist[idx] = item;\n    }\n  }, {\n    key: \"testAxios\",\n    value: function () {\n      var _testAxios = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = Number;\n                _context.next = 3;\n                return Axios.get(\"http://hangang.dkserver.wo.tc/\");\n\n              case 3:\n                _context.t1 = _context.sent.data.temp;\n                result = (0, _context.t0)(_context.t1);\n                return _context.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function testAxios() {\n        return _testAxios.apply(this, arguments);\n      }\n\n      return testAxios;\n    }()\n  }]);\n\n  return Store;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"todolist\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"addTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addTodo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"removeTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"removeTodo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"updateTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"updateTodo\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"testAxios\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"testAxios\"), _class.prototype)), _class); // store 생성 또는 로드 함수\n\nfunction initializeStore() {\n  var _store2;\n\n  var _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : new Store();\n\n  if (false) return _store;\n  if (!store) store = _store;\n  return _store;\n}\n\nexport function useStore() {\n  _s();\n\n  var store = useMemo(function () {\n    return initializeStore();\n  }, []);\n  return store;\n}\n\n_s(useStore, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"sources":["C:/Users/pjh86/Desktop/Project/nextjs_first/store.ts"],"names":["action","observable","useStaticRendering","useMemo","Axios","store","Store","item","todolist","length","id","push","idx","findIndex","i","splice","Number","get","data","temp","result","initializeStore","_store","useStore"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAA0D,MAA1D;AACA,SAASC,kBAAT,QAAmC,YAAnC;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEAF,kBAAkB,OAAlB;AAEA,IAAIG,KAAJ;AAEA,WAAaC,KAAb;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAGC;AAHD,4BAKSC,IALT,EAK0B;AACxB,UAAI,KAAKC,QAAL,CAAcC,MAAd,IAAwB,CAA5B,EAA+BF,IAAI,CAACG,EAAL,GAAU,CAAV,CAA/B,KACKH,IAAI,CAACG,EAAL,GAAU,KAAKF,QAAL,CAAc,KAAKA,QAAL,CAAcC,MAAd,GAAuB,CAArC,EAAwCC,EAAxC,GAA6C,CAAvD;AACL,WAAKF,QAAL,CAAcG,IAAd,CAAmBJ,IAAnB;AACA,KATF,CAUC;;AAVD;AAAA;AAAA,+BAYYA,IAZZ,EAY6B;AAC3B,UAAIK,GAAG,GAAG,KAAKJ,QAAL,CAAcK,SAAd,CAAwB,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACJ,EAAF,IAAQH,IAAI,CAACG,EAApB;AAAA,OAAxB,CAAV;AACA,UAAIE,GAAG,IAAI,CAAC,CAAZ,EAAe,KAAKJ,QAAL,CAAcO,MAAd,CAAqBH,GAArB,EAA0B,CAA1B;AACf,KAfF,CAgBC;;AAhBD;AAAA;AAAA,+BAkBYL,IAlBZ,EAkB6B;AAC3B,UAAIK,GAAG,GAAG,KAAKJ,QAAL,CAAcK,SAAd,CAAwB,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACJ,EAAF,IAAQH,IAAI,CAACG,EAApB;AAAA,OAAxB,CAAV;AACA,UAAIE,GAAG,IAAI,CAAC,CAAZ,EAAe,KAAKJ,QAAL,CAAcI,GAAd,IAAqBL,IAArB;AACf;AArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAyBeS,MAzBf;AAAA;AAAA,uBAyB6BZ,KAAK,CAACa,GAAN,CAAU,gCAAV,CAzB7B;;AAAA;AAAA,4CAyB0EC,IAzB1E,CAyB+EC,IAzB/E;AAyBMC,gBAAAA,MAzBN;AAAA,iDA0BSA,MA1BT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,qFACEnB,UADF;AAAA;AAAA;AAAA;AAAA;AAAA,WACqC,EADrC;AAAA;AAAA,4DAIED,MAJF,+IAWEA,MAXF,kJAiBEA,MAjBF,iJAuBEA,MAvBF,+F,CA8BA;;AACA,SAASqB,eAAT,GAA2B;AAAA;;AAC1B,MAAMC,MAAM,cAAGjB,KAAH,6CAAY,IAAIC,KAAJ,EAAxB;;AAEA,aAAmC,OAAOgB,MAAP;AACnC,MAAI,CAACjB,KAAL,EAAYA,KAAK,GAAGiB,MAAR;AAEZ,SAAOA,MAAP;AACA;;AAED,OAAO,SAASC,QAAT,GAAoB;AAAA;;AAC1B,MAAMlB,KAAK,GAAGF,OAAO,CAAC;AAAA,WAAMkB,eAAe,EAArB;AAAA,GAAD,EAA0B,EAA1B,CAArB;AACA,SAAOhB,KAAP;AACA;;GAHekB,Q","sourcesContent":["import { action, observable, computed, runInAction } from \"mobx\";\r\nimport { useStaticRendering } from \"mobx-react\";\r\nimport { useMemo } from \"react\";\r\nimport { ITodoItem } from \"./components/TodoList\";\r\nimport Axios from \"axios\";\r\n\r\nuseStaticRendering(typeof window === \"undefined\");\r\n\r\nlet store;\r\n\r\nexport class Store {\r\n\t@observable todolist: ITodoItem[] = [];\r\n\r\n\t// TodoItem 추가\r\n\t@action\r\n\taddTodo(item: ITodoItem) {\r\n\t\tif (this.todolist.length == 0) item.id = 0;\r\n\t\telse item.id = this.todolist[this.todolist.length - 1].id + 1;\r\n\t\tthis.todolist.push(item);\r\n\t}\r\n\t// TodoItem 삭제\r\n\t@action\r\n\tremoveTodo(item: ITodoItem) {\r\n\t\tlet idx = this.todolist.findIndex((i) => i.id == item.id);\r\n\t\tif (idx != -1) this.todolist.splice(idx, 1);\r\n\t}\r\n\t// TodoItem 갱신\r\n\t@action\r\n\tupdateTodo(item: ITodoItem) {\r\n\t\tlet idx = this.todolist.findIndex((i) => i.id == item.id);\r\n\t\tif (idx != -1) this.todolist[idx] = item;\r\n\t}\r\n\r\n\t@action\r\n\tasync testAxios(): Promise<Number> {\r\n\t\tlet result = Number((await Axios.get(\"http://hangang.dkserver.wo.tc/\")).data.temp);\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\n// store 생성 또는 로드 함수\r\nfunction initializeStore() {\r\n\tconst _store = store ?? new Store();\r\n\r\n\tif (typeof window === \"undefined\") return _store;\r\n\tif (!store) store = _store;\r\n\r\n\treturn _store;\r\n}\r\n\r\nexport function useStore() {\r\n\tconst store = useMemo(() => initializeStore(), []);\r\n\treturn store;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}