{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"C:\\\\Users\\\\pjh86\\\\Desktop\\\\Project\\\\nextjs_first\\\\pages\\\\index.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport TodoList from \"../components/TodoList\";\nimport \"./index.scss\";\nimport { inject, observer } from \"mobx-react\";\nlet Index = (_dec = inject(\"store\"), _dec(_class = observer(_class = (_temp = class Index extends React.Component {\n  // 생성자\n  constructor(props) {\n    super(props);\n    this.inputEl = void 0;\n    this.handleAppendTodo = this.handleAppendTodo.bind(this);\n  } // 랜더링\n\n\n  async render() {\n    console.log(await this.props.store.testAxios());\n    return __jsx(\"div\", {\n      id: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 4\n      }\n    }, __jsx(\"div\", {\n      className: \"todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"todo__input\",\n      onKeyPress: this.handleAppendTodo,\n      ref: el => this.inputEl = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }), __jsx(TodoList, {\n      list: this.props.store.todolist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }\n    })));\n  } // 엔터 쳤을 시 Todo 추가\n\n\n  handleAppendTodo(e) {\n    if (e.key == \"Enter\") {\n      const {\n        value\n      } = e.target; // store 사용\n\n      this.props.store.addTodo({\n        name: value,\n        isFinished: false\n      }); // value 비움\n\n      this.inputEl.value = \"\";\n    }\n  }\n\n}, _temp)) || _class) || _class);\nexport default Index;","map":{"version":3,"sources":["C:/Users/pjh86/Desktop/Project/nextjs_first/pages/index.tsx"],"names":["React","TodoList","inject","observer","Index","Component","constructor","props","inputEl","handleAppendTodo","bind","render","console","log","store","testAxios","el","todolist","e","key","value","target","addTodo","name","isFinished"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAoC,wBAApC;AAEA,OAAO,cAAP;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;IASMC,K,WAFLF,MAAM,CAAC,OAAD,C,gBACNC,Q,mBADD,MAEMC,KAFN,SAEoBJ,KAAK,CAACK,SAF1B,CAE2C;AAE1C;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AADkB,SAFnBC,OAEmB;AAElB,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,GANyC,CAO1C;;;AACA,QAAMC,MAAN,GAAe;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAM,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,SAAjB,EAAlB;AACA,WACC;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,aAA7B;AAA2C,MAAA,UAAU,EAAE,KAAKN,gBAA5D;AAA8E,MAAA,GAAG,EAAGO,EAAD,IAAS,KAAKR,OAAL,GAAeQ,EAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,MAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKT,KAAL,CAAWO,KAAX,CAAiBG,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD,CADD;AAQA,GAlByC,CAmB1C;;;AACAR,EAAAA,gBAAgB,CAACS,CAAD,EAAyB;AACxC,QAAIA,CAAC,CAACC,GAAF,IAAS,OAAb,EAAsB;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAYF,CAAC,CAACG,MAApB,CADqB,CAErB;;AACA,WAAKd,KAAL,CAAWO,KAAX,CAAiBQ,OAAjB,CAAyB;AACxBC,QAAAA,IAAI,EAAEH,KADkB;AAExBI,QAAAA,UAAU,EAAE;AAFY,OAAzB,EAHqB,CAOrB;;AACA,WAAKhB,OAAL,CAAaY,KAAb,GAAqB,EAArB;AACA;AACD;;AA/ByC,C;AAkC3C,eAAehB,KAAf","sourcesContent":["import React from \"react\";\r\nimport TodoList, { ITodoItem } from \"../components/TodoList\";\r\nimport Link from \"next/link\";\r\nimport \"./index.scss\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Store } from \"../store\";\r\n\r\ninterface Props {\r\n\tstore: Store;\r\n}\r\n\r\n@inject(\"store\")\r\n@observer\r\nclass Index extends React.Component<Props> {\r\n\tinputEl: HTMLInputElement;\r\n\t// 생성자\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleAppendTodo = this.handleAppendTodo.bind(this);\r\n\t}\r\n\t// 랜더링\r\n\tasync render() {\r\n\t\tconsole.log(await this.props.store.testAxios());\r\n\t\treturn (\r\n\t\t\t<div id=\"app\">\r\n\t\t\t\t<div className=\"todo\">\r\n\t\t\t\t\t<input type=\"text\" className=\"todo__input\" onKeyPress={this.handleAppendTodo} ref={(el) => (this.inputEl = el)} />\r\n\t\t\t\t\t<TodoList list={this.props.store.todolist}></TodoList>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\t// 엔터 쳤을 시 Todo 추가\r\n\thandleAppendTodo(e: React.KeyboardEvent) {\r\n\t\tif (e.key == \"Enter\") {\r\n\t\t\tconst { value } = e.target as HTMLInputElement;\r\n\t\t\t// store 사용\r\n\t\t\tthis.props.store.addTodo({\r\n\t\t\t\tname: value,\r\n\t\t\t\tisFinished: false,\r\n\t\t\t});\r\n\t\t\t// value 비움\r\n\t\t\tthis.inputEl.value = \"\";\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}